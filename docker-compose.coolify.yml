version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
      args:
        - VITE_API_URL=${CUSTOM_API_URL}
        - VITE_WS_URL=${CUSTOM_WS_URL}
    environment:
      - CUSTOM_FRONTEND_DOMAIN=${CUSTOM_FRONTEND_DOMAIN}
      - CUSTOM_FRONTEND_URL=${CUSTOM_FRONTEND_URL}
      - VITE_API_URL=${CUSTOM_API_URL}
      - VITE_WS_URL=${CUSTOM_WS_URL}
    labels:
      - coolify.managed=true
      - coolify.type=application
      - traefik.enable=true
      - traefik.http.routers.toovydrop-frontend.rule=Host(`${CUSTOM_FRONTEND_DOMAIN}`)
      - traefik.http.routers.toovydrop-frontend.entryPoints=http,https
      - traefik.http.routers.toovydrop-frontend.tls=true
      - traefik.http.routers.toovydrop-frontend.tls.certresolver=letsencrypt
      - traefik.http.services.toovydrop-frontend.loadbalancer.server.port=80
    restart: unless-stopped
    networks:
      - coolify

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    environment:
      - CUSTOM_BACKEND_DOMAIN=${CUSTOM_BACKEND_DOMAIN}
      - CUSTOM_API_URL=${CUSTOM_API_URL}
      - CUSTOM_WS_URL=${CUSTOM_WS_URL}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_ACCESS_EXPIRY=${JWT_ACCESS_EXPIRY}
      - JWT_REFRESH_EXPIRY=${JWT_REFRESH_EXPIRY}
      - FTP_HOST=${FTP_HOST}
      - FTP_PORT=${FTP_PORT}
      - FTP_USER=${FTP_USER}
      - FTP_PASSWORD=${FTP_PASSWORD}
      - FTP_SECURE=${FTP_SECURE}
      - FTP_REJECT_UNAUTHORIZED=${FTP_REJECT_UNAUTHORIZED}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE}
      - CHUNK_SIZE=${CHUNK_SIZE}
      - ENABLE_MALWARE_SCAN=${ENABLE_MALWARE_SCAN}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FILE=/app/logs/app.log
    labels:
      - coolify.managed=true
      - coolify.type=application
      - traefik.enable=true
      - traefik.http.routers.toovydrop-backend.rule=Host(`${CUSTOM_BACKEND_DOMAIN}`) && PathPrefix(`/api`)
      - traefik.http.routers.toovydrop-backend.entryPoints=http,https
      - traefik.http.routers.toovydrop-backend.tls=true
      - traefik.http.routers.toovydrop-backend.tls.certresolver=letsencrypt
      - traefik.http.services.toovydrop-backend.loadbalancer.server.port=3000
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - coolify

volumes:
  backend_uploads:
    driver: local
  backend_logs:
    driver: local

networks:
  coolify:
    external: true